/*
 * Copyright 2019-2020 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

category Vulnerability {

  abstract asset ManuallyModeledVulnerability extends Vulnerability
    user info: "This asset is used to represent vulnerabilities in the manual modeling scenario (i.e. where vulnerabilities are identified manually)."
  {
    # userInteracts [Bernoulli(0.5)]
      user info: "Some exploits require user interaction. This defense specifies the probability of such interaction on the given application."
      ->  abuse
  }

  asset ManualLowImpactVulnerability extends ManuallyModeledVulnerability
    user info: "A low impact vulnerability is assumed to have a low impact on confidentiality, integrity and availability of the vulnerable application."
  {
    | impact
      user info: "Confidentiality Impact: Low, Integrity Impact: Low, Availability Impact: Low"
      -> lowImpact

    | lowImpact @hidden [Bernoulli(0.5)]
      -> allVulnerableSoftware().read,
         allVulnerableSoftware().modify,
         allVulnerableSoftware().deny
  }

  asset ManualHighImpactVulnerability extends ManuallyModeledVulnerability
    user info: "A high impact vulnerability is assumed to have a hight impact on the vulnerable application."
  {
    | impact
      user info: "This exploit is assumed to grant the attacker full control of the vulnerable application's executing code"
      -> allVulnerableSoftware().codeExecution
  }
}

category Exploit {

  asset ManualHighComplexityExploit extends Exploit
    user info: "An exploit that has high exploitability complexity (low/PoC code maturity level)."
    modeler info: "https://www.first.org/cvss/v3.1/specification-document#3-1-Exploit-Code-Maturity-E"
  {
    | attemptExploit [Exponential(0.01)]
      -> vulnerability.impact
  }

  asset ManualLowComplexityExploit extends Exploit
    user info: "An exploit that has low exploitability complexity (high/functional code maturity level)."
    modeler info: "https://www.first.org/cvss/v3.1/specification-document#3-1-Exploit-Code-Maturity-E"
  {
    | attemptExploit [Exponential(1.0)]
      -> vulnerability.impact
  }

}
